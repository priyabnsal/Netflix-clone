{"version":3,"sources":["axios.js","Row.js","Requests.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","console","table","className","map","movie","key","id","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","log","handleClick","src","poster_path","backdrop_path","alt","videoId","opts","height","width","playerVars","autoplay","API_KEY","Requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abc5aa72.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url= \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const[movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n    async function fetchData() {\r\n        const request = await axios.get(fetchUrl);\r\n        // console.log(request.data.results);\r\n        setMovies(request.data.results);\r\n        return request;\r\n    }\r\n    fetchData();\r\n    }, [fetchUrl]);\r\n    console.table(movies);\r\n\r\n    const opts= {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if(trailerUrl){\r\n            setTrailerUrl('');\r\n        }else{\r\n            movieTrailer(movie?.name || \"\")\r\n            .then(url => {\r\n                // https://www.youtube.com/watch?v=XtMThy8QKqU&t=9753s\r\n                const urlParams = new URLSearchParams( new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            }).catch((error) => console.log(error));\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            {/* <img scr=\"https://image.tmdb.org/t/p/original/wrLC5kx0nEq9U0MyJD7dnOT6m5F.jpg\"/>\r\n            <img src=\"https://image.tmdb.org/t/p/original/wrLC5kx0nEq9U0MyJD7dnOT6m5F.jpg\" alt= \"myPic\" className=\"card_img\"/>\r\n             */}\r\n            <div className=\"row_posters\">\r\n\r\n                {movies.map((movie) => (\r\n                    <img key={movie.id} onClick={() => handleClick(movie)} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt= {movie.name} className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}/>\r\n                    \r\n                ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts= {opts}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"15f560bb39dd065406e43b1089d6fb30\";\r\n\r\nconst Requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default Requests;","import React, { useState, useEffect } from 'react'\r\nimport axios from \"./axios\";\r\nimport Requests from \"./Requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(Requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length-1)\r\n            ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    console.log(movie);\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n-1)+ \"...\" : str;\r\n    }\r\n    return (\r\n        <header className=\"banner\" style={{ backgroundSize: \"cover\", backgroundImage: `url(\"https://images.tmdb.org/t/p/original/${movie?.backdrop_path}\")`, backgroundPosition: \"center center\",}}> {/*bg image*/}\r\n        <div className=\"banner_contents\" >\r\n            {/* title */}\r\n            <h1 className=\"banner_title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n\r\n            <div className=\"banner_buttons\">\r\n                <button className=\"banner_button\">Play</button>\r\n                <button className=\"banner_button\">My List</button>\r\n            </div>\r\n            <h1 className=\"banner_des\">{truncate(movie?.overview, 150)}</h1>\r\n        </div>\r\n            {/* div>2 button */}\r\n            {/* description */}\r\n            <div className=\"banner--fadebottom\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n\r\n    const [show, handleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () =>{\r\n            if(window.scrollY > 100){\r\n                handleShow(true);\r\n            }else handleShow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt= \"Netflix_logo\" className=\"nav_logo\"/>\r\n        </div>\r\n        <div className=\"nav_avatar\">\r\n            <p>Priya Bansal</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport Row from \"./Row\";\r\nimport Requests from './Requests';\r\nimport \"./app.css\"\r\nimport Banner from \"./Banner\";\r\nimport Nav from \"./Nav\";\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n         <Nav/>\r\n         <Banner/>\r\n\r\n         <Row isLargeRow={true} title= \"NETFLIX ORIGINALS\" fetchUrl={Requests.fetchNetflixOriginals} />\r\n         <Row title= \"Trending Now\" fetchUrl={Requests.fetchTrending} />\r\n         <Row title= \"Top Rated\" fetchUrl={Requests.fetchTopRated} />\r\n         <Row title= \"Action Movies\" fetchUrl={Requests.fetchActionMovies} />\r\n         <Row title= \"Comedy Movies\" fetchUrl={Requests.fetchComedyMovies} />\r\n         <Row title= \"Horror Movies\" fetchUrl={Requests.fetchHorrorMovies} />\r\n         <Row title= \"Romance Movies\" fetchUrl={Requests.fetchRomanceMovies} />\r\n         <Row title= \"Documentaries\" fetchUrl={Requests.fetchDocumentaries} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\n\n\nReactDOM.render(\n  <>\n  <App/>\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}